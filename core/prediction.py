from enum import unique
from pyexpat import model
from typing import Final
import joblib
import pandas as pd
import numpy as np
from sklearn.preprocessing import MinMaxScaler
from .models import Churn, Churn





#Prediction generated by Machine Learning model

def model_pred():
    z = 0.0
    #import and clean dataset
    df = pd.read_csv('WA_Fn-UseC_-Telco-Customer-Churn.csv')
    df.TotalCharges = pd.to_numeric(df.TotalCharges, errors='coerce')
    df.dropna(inplace = True)
    #Remove customer IDs from the data set
    df2 = df.iloc[:,1:]
    df2 = df2.drop(columns = ['Churn'])
    #Convert categorical to dummy
    df_dummies = pd.get_dummies(df2)
    features = df_dummies.columns.values
    scaler = MinMaxScaler(feature_range = (0,1))
    scaler.fit(df_dummies)
    df_dummies = pd.DataFrame(scaler.transform(df_dummies))
    df_dummies.columns = features
    with open ('churn_adaboost.sav', 'rb'):
      #run ml model
      cls = joblib.load('churn_adaboost.sav')
      ans = cls.predict(df_dummies)
      unique, counts = np.unique(ans, return_counts=True) #get vlaues of 0s and 1s in the numpy array
      x = counts[0] #number of 0s
      y = counts[1] #number of 1s
      z = float(y / (x + y)) * 100
      print(z)
      return z

if __name__ == "__main__":
    model_pred()