{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anirudh Bhattacharya\\\\Documents\\\\Telecom Churn\\\\Project\\\\Main\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    }); // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Something went wrong.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: [this.state.error && this.state.error.toString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), this.state.errorInfo.componentStack]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    } // Normally, just render children\n\n\n    return this.props.children;\n  }\n\n}\n\nclass BuggyCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(_ref => {\n      let {\n        counter\n      } = _ref;\n      return {\n        counter: counter + 1\n      };\n    });\n  }\n\n  render() {\n    if (this.state.counter === 5) {\n      // Simulate a JS error\n      throw new Error('I crashed!');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: this.handleClick,\n      children: this.state.counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nfunction Application() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"This is an example of error boundaries in React 16.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), \"Click on the numbers to increase the counters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), \"The counter is programmed to throw when it reaches 5. This simulates a JavaScript error in a component.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"These two counters are inside the same error boundary. If one crashes, the error boundary will replace both of them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BuggyCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BuggyCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"These two counters are each inside of their own error boundary. So if one crashes, the other is not affected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(BuggyCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(BuggyCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Application;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"Application\");","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","ErrorBoundary","Component","constructor","props","state","error","errorInfo","componentDidCatch","setState","render","whiteSpace","toString","componentStack","children","BuggyCounter","counter","handleClick","bind","Error","Application","root","createRoot","document","getElementById"],"sources":["C:/Users/Anirudh Bhattacharya/Documents/Telecom Churn/Project/Main/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n  \n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    })\n    // You can also log error messages to an error reporting service here\n  }\n  \n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }  \n}\n\nclass BuggyCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { counter: 0 };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  \n  handleClick() {\n    this.setState(({counter}) => ({\n      counter: counter + 1\n    }));\n  }\n  \n  render() {\n    if (this.state.counter === 5) {\n      // Simulate a JS error\n      throw new Error('I crashed!');\n    }\n    return <h1 onClick={this.handleClick}>{this.state.counter}</h1>;\n  }\n}\n\nfunction Application() {\n  return (\n    <div>\n      <p>\n        <b>\n          This is an example of error boundaries in React 16.\n          <br /><br />\n          Click on the numbers to increase the counters.\n          <br />\n          The counter is programmed to throw when it reaches 5. This simulates a JavaScript error in a component.\n        </b>\n      </p>\n      <hr />\n      <ErrorBoundary>\n        <p>These two counters are inside the same error boundary. If one crashes, the error boundary will replace both of them.</p>\n        <BuggyCounter />\n        <BuggyCounter />\n      </ErrorBoundary>\n      <hr />\n      <p>These two counters are each inside of their own error boundary. So if one crashes, the other is not affected.</p>\n      <ErrorBoundary><BuggyCounter /></ErrorBoundary>\n      <ErrorBoundary><BuggyCounter /></ErrorBoundary>\n    </div>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}